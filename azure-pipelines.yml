pool:
 vmImage: 'windows-2019'

steps:
- task: DotNetCoreInstaller@0
  inputs:
    packageType: 'sdk'
    version: '2.*'



- script: dotnet restore

- script: dotnet build --configuration $(buildConfiguration)
  displayName: 'dotnet build $(buildConfiguration)'

- task: DotNetCoreCLI@2
  inputs:
    command: publish
    publishWebProjects: True
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: True

# this code takes all the files in $(Build.ArtifactStagingDirectory) and uploads them as an artifact of your build.
- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
    artifactName: 'PredictHeartDiseases'

- task: DotNetCoreCLI@2
  inputs:
    command: publish
    publishWebProjects: True
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: True

- task: PublishBuildArtifacts@1
  displayName: 'publish artifacts'

- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'Visual Studio Enterprise(f2043603-821e-4fe0-b11d-d9f5655033b1)'
    appType: 'webApp'
    WebAppName: 'PredictHeartDiseases'
    deployToSlotOrASE: true
    ResourceGroupName: 'MLNetResource'
    SlotName: 'production'
    packageForLinux: '$(System.ArtifactsDirectory)/**/*.zip'
    enableCustomDeployment: true
    DeploymentType: 'webDeploy'